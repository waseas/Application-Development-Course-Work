/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ManageAirliners;

import Business.Airliner;
import Business.AirlinerDirectory;
import Business.Airplane;
import Business.UserDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

/**
 *
 * @author ajith
 */
public class CreateNewAirlinerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateNewAirlinerJPanel
     */
    private AirlinerDirectory airlineDirectory;
    private JPanel panelRight;
    private UserDirectory userDirectory;

    public CreateNewAirlinerJPanel(JPanel panelRight, AirlinerDirectory airlineDirectory, UserDirectory userDirectory) {
        initComponents();
        this.airlineDirectory = airlineDirectory;
        this.panelRight = panelRight;
        this.userDirectory = userDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nameJText = new javax.swing.JTextField();
        userNameJText = new javax.swing.JTextField();
        passwordJText = new javax.swing.JTextField();
        flightIdJText = new javax.swing.JTextField();
        fromLocationJText = new javax.swing.JTextField();
        toLocationJText = new javax.swing.JTextField();
        priceJText = new javax.swing.JTextField();
        spinnerHour = new javax.swing.JSpinner();
        spinnerMinute = new javax.swing.JSpinner();
        spinnerAmPm = new javax.swing.JSpinner();
        createBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        jLabel2.setText("Name:");

        jLabel3.setText("Username:");

        jLabel4.setText("Password:");

        jLabel5.setText("Flight ID:");

        jLabel6.setText("From Location:");

        jLabel7.setText("To Location:");

        jLabel8.setText("Scheduled Time:");

        jLabel9.setText("Price:");

        userNameJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameJTextActionPerformed(evt);
            }
        });

        spinnerHour.setModel(new javax.swing.SpinnerListModel(new String[] {"12", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"}));

        spinnerMinute.setModel(new javax.swing.SpinnerListModel(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"}));

        spinnerAmPm.setModel(new javax.swing.SpinnerListModel(new String[] {"AM", "PM"}));

        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel10.setText("Create Airliner");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(toLocationJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fromLocationJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(flightIdJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userNameJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(spinnerHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(spinnerMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(spinnerAmPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(nameJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(priceJText, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(createBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel10)))
                .addContainerGap(295, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn)
                .addGap(19, 19, 19)
                .addComponent(jLabel10)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(userNameJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(flightIdJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fromLocationJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(toLocationJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(spinnerHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerAmPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(44, 44, 44)
                .addComponent(createBtn)
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userNameJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameJTextActionPerformed

    private boolean userNamePatternCorrect() {
        Pattern p = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);
        Matcher m = p.matcher(userNameJText.getText());
        boolean b = m.matches();
        return b;
    }

    private boolean passwordPatternCorrect() {
        Pattern p = Pattern.compile("((?=.*[a-z])(?=.*\\d)(?=.*[A-Z])(?=.*[@#$%!]).{6,40})");
        Matcher m = p.matcher(passwordJText.getText());
        boolean b = m.matches();
        return b;
    }

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
        nameJText.setBorder(new LineBorder(new Color(128, 128, 128)));
        userNameJText.setBorder(new LineBorder(new Color(128, 128, 128)));
        passwordJText.setBorder(new LineBorder(new Color(128, 128, 128)));
        flightIdJText.setBorder(new LineBorder(new Color(128, 128, 128)));
        fromLocationJText.setBorder(new LineBorder(new Color(128, 128, 128)));
        toLocationJText.setBorder(new LineBorder(new Color(128, 128, 128)));
        spinnerAmPm.setBorder(new LineBorder(new Color(128, 128, 128)));
        spinnerHour.setBorder(new LineBorder(new Color(128, 128, 128)));
        spinnerMinute.setBorder(new LineBorder(new Color(128, 128, 128)));

        jLabel2.setForeground(Color.black);
        jLabel4.setForeground(Color.black);
        jLabel5.setForeground(Color.black);
        jLabel6.setForeground(Color.black);
        jLabel7.setForeground(Color.black);
        jLabel8.setForeground(Color.black);
        jLabel9.setForeground(Color.black);

        if (nameJText.getText() == null || nameJText.getText().equals("")) {
            nameJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel2.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Name cannot be empty");
            return;
        }

        if (flightIdJText.getText() == null || flightIdJText.getText().equals("")) {
            flightIdJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel5.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Id cannot be empty");
            return;
        }

        if (fromLocationJText.getText() == null || fromLocationJText.getText().equals("")) {
            fromLocationJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel6.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "From Location cannot be empty");
            return;
        }

        if (toLocationJText.getText() == null || toLocationJText.getText().equals("")) {
            toLocationJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel7.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "To Location cannot be empty");
            return;
        }

        if (userNameJText.getText() == null || userNameJText.getText().equals("")) {
            userNameJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel3.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Username cannot be empty");
            return;
        }

        if (passwordJText.getText() == null || passwordJText.getText().equals("")) {
            passwordJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel4.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Password cannot be empty");
            return;
        }

        if (!userNamePatternCorrect()) {
            userNameJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel3.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "UserName Should be in the form of abc@abc.com");
            return;
        }

        if (!passwordPatternCorrect()) {
            passwordJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel4.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Password should be a minimum of 6 digits and a combination of a number, Upper Case Letter, LowerCase Letter and a Special Character !@#");
            return;
        }

        for (Airliner airliner : airlineDirectory.getAirlinerList()) {
            if (airliner.getAirlinerName().equalsIgnoreCase(nameJText.getText())) {
                JOptionPane.showMessageDialog(null, "Airliner Already Exists.");
                return;
            }
        }

        int flightId = 0;
        try {
            flightId = Integer.parseInt(flightIdJText.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid FlightId");
            return;
        }
        double price = 0;
        try {
            price = Double.parseDouble(priceJText.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid Price");
            return;
        }

        int totalNoOfSeats = 150;

        Airplane airplane = new Airplane(flightId, fromLocationJText.getText(), toLocationJText.getText(), spinnerHour.getValue() + ":" + spinnerMinute.getValue() + " " + spinnerAmPm.getValue(), totalNoOfSeats, nameJText.getText(), 0, price);

        List<Airplane> flightFleet = new ArrayList<>();
        flightFleet.add(airplane);

        List<Airliner> airlinerList = airlineDirectory.getAirlinerList();
        Airliner airliner = new Airliner(nameJText.getText(), 1, flightFleet);
        airlinerList.add(airliner);
        userDirectory.createUserAccount(userNameJText.getText(), passwordJText.getText(), airliner.getAirlinerName(), "Airliner");

        JOptionPane.showMessageDialog(null, "Airliner added Successfully.");
        this.panelRight.remove(this);
        Component[] cps = this.panelRight.getComponents();
        for (Component cp : cps) {
            if (cp instanceof ManageAirlinersJPanel) {
                ManageAirlinersJPanel ams = (ManageAirlinersJPanel) cp;
                ams.populateTable();
            }
        }


    }//GEN-LAST:event_createBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
//        CardLayout layout = (CardLayout)panelRight.getLayout();
//        panelRight.remove(this);
//        layout.previous(panelRight); 

        CardLayout layout = (CardLayout) panelRight.getLayout();
        ManageAirlinersJPanel manageAirlinePanel = new ManageAirlinersJPanel(panelRight, airlineDirectory, userDirectory);
        panelRight.add("ManageAirlinersJPanel", manageAirlinePanel);
        layout.next(panelRight);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createBtn;
    private javax.swing.JTextField flightIdJText;
    private javax.swing.JTextField fromLocationJText;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nameJText;
    private javax.swing.JTextField passwordJText;
    private javax.swing.JTextField priceJText;
    private javax.swing.JSpinner spinnerAmPm;
    private javax.swing.JSpinner spinnerHour;
    private javax.swing.JSpinner spinnerMinute;
    private javax.swing.JTextField toLocationJText;
    private javax.swing.JTextField userNameJText;
    // End of variables declaration//GEN-END:variables
}
